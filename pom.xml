<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>selenium-docker</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>20</maven.compiler.source>
        <maven.compiler.target>20</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <selenium.java.version>4.11.0</selenium.java.version>
        <logback.version>1.4.11</logback.version>
        <webdriver.manager.version>5.5.3</webdriver.manager.version>
        <testng.version>7.8.0</testng.version>
        <jackson.version>2.15.2</jackson.version>
        <maven.compiler.version>3.8.1</maven.compiler.version>
        <maven.dependency.version>3.2.0</maven.dependency.version>
        <maven.jar.version>3.3.0</maven.jar.version>
        <maven.surefire.version>3.0.0-M5</maven.surefire.version>
        <maven.resources.plugin>3.3.1</maven.resources.plugin>
        <package.directory>${project.build.directory}/docker-resources</package.directory>
    </properties>

    <dependencies>

        <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-java</artifactId>
                <version>4.11.0</version>

        </dependency>
        <!-- logging library -->
        <!-- https://www.baeldung.com/logback -->
        <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.4.11</version>
            <scope>test</scope>
        </dependency>

        <!-- web-driver manager for local testing -->
        <!-- https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager -->
        <dependency>
            <groupId>io.github.bonigarcia</groupId>
            <artifactId>webdrivermanager</artifactId>
            <version>5.5.3</version>
        </dependency>

        <!-- To deserialize json into Java object or vice versa -->
        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.15.2</version>
        </dependency>

        <!-- Test framework -->
        <!-- https://mvnrepository.com/artifact/org.testng/testng -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>7.8.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>selenium-docker</finalName>
        <plugins>
            <!-- To compile the source code using specific java version. also to force IDE to change the settings -->
            <plugin>

                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <release>20</release>
                </configuration>
            </plugin>
            <!-- To run the tests using specific parameters, change thread count, testng report output directory etc -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.version}</version>
                <configuration>
                    <!--mvn clean test -Dbrowser=chrome -Dselenium.grid.enabled=true -->
                    <systemPropertyVariables>
                        <browser>chrome</browser>
                        <selenium.grid.enabled>false</selenium.grid.enabled>
                    </systemPropertyVariables>
                    <suiteXmlFiles>
                        <file>src/test/resources/test-suites/vendor-portal-parallel.xml</file>
                        <file>src/test/resources/test-suites/flight-reservation-parallel.xml</file>
          </suiteXmlFiles>
          <threadCount>2</threadCount>
          <reportsDirectory>target/test-output</reportsDirectory>
      </configuration>
  </plugin>
  <!-- To copy all the dependencies to run our tests as part of "mvn package" -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${package.directory}/libs
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- To package our page objects, test classes into jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <outputDirectory>${package.directory}/libs</outputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                        <configuration>
                            <includes>
                                **/*.class
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- To copy resources into the output directory -->
            <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <version>3.3.1</version>
            <executions>
            <execution>
            <id>copy-resources</id>
            <phase>prepare-package</phase>
            <goals>
            <goal>copy-resources</goal>
            </goals>
                <configuration>
                    <outputDirectory>${package.directory}</outputDirectory>
                    <resources>
                        <resource>
                            <directory>src/test/resources</directory>
                        </resource>
                    </resources>
                </configuration>
            </execution>
            </executions>
            </plugin>
        </plugins>
    </build>

</project>
